//-
	Shows an allteammetrics table for alliance selection.
	Used by allianceselection.pug
include ../reports/templates/heatmap
if (aggdata)
	- var countDisplayCol = 0;
	- for (var item of layout) if (matchDataHelper.isQuantifiableType(item.type)) countDisplayCol++;
	- var colPercent = 100/countDisplayCol;

	style.
		.table-fixed {
			vertical-align: text-bottom;
			width: 50px;
		}
		.table-variable {
			vertical-align: text-bottom;
			width: #{colPercent}%;
		}

	- var aggRangeMap = [];
	for scoreItem in currentAggRanges
		- aggRangeMap[scoreItem.key] = scoreItem;
	//- 2022-03-17 JL: A simple but effective way of showimg multiple table types w/o too much copy paste (though I hardcoded the AVG default)
	- var metricTypes = {AVG: msg('metrics.AVG'), MAX: msg('metrics.MAX')};
	span Show:  
	each label, key in metricTypes
		input(type="radio" id=`show_${key}` name="metricSelection" value=key checked=(key=='AVG'))
		label(for=`show_${key}`) &nbsp;#{label} &nbsp;
	p
	each label, key in metricTypes
		- let visibility = (key === 'AVG') ? '' : 'display: none;'; // Show or hide depending on the key (AVG hardcoded) - used for jquery .hide()/.show()
		table(class="w3-table w3-text-white metricTable" id=`metricTable_${key}` style=visibility)
			tr
				th(class="w3-tooltip")
					abbr(title)!=msg('allianceselection.priorityAbbr')
					span(class="w3-tooltiptext" style="min-width: fit-content")!=msg('allianceselection.priority')
				th!=msg('allianceselection.team')
				th!=msg('allianceselection.rank')
				- var colIdx = 4;
				for item in layout
					if (matchDataHelper.isQuantifiableType(item.type))
						- var text = item.key; var result1 = text.replace( /([A-Z])/g, " $1" ); var result2 = result1.charAt(0).toUpperCase() + result1.slice(1)
						th(class="w3-right-align table-variable")= result2
						- colIdx++
			for row in aggdata
				tr(class=`row_${row._id}` style="background-color: #b0b0c057")
					td(class="w3-center")= row.value
					- var style = ''; // class to add to the team number; strikethrough if less than 0, bold if 1, bolder if >1
					- if (row.value < 0) style = 'strike'; else if (row.value > 1) style = 'stronger'; else if (row.value > 0) style = 'strong';
					td(class=("w3-center " + style))= row._id.substring(3)
					td(class="w3-right-align")= row.rank
					for item in layout
						-//if (item.type == 'checkbox' || item.type == 'counter' || item.type == 'badcounter')
						if (matchDataHelper.isQuantifiableType(item.type))
							- var valStyle = 'w3-right-align'
							- if (row[item.key] == 0) valStyle = 'w3-right-align theme-text-gray'
							- let thisRange = aggRangeMap[item.key]; // below: getValR(thisRange[key+'min'] -> getValR(aggRangeMap[item.key].AVGmin
							if (thisRange)
								td(class=`${valStyle}` style=`background-color: rgb(${getValR(thisRange[key+'min'], thisRange[key+'max'], row[item.key+key])},${getValG(thisRange[key+'min'], thisRange[key+'max'], row[item.key+key])},${getValB(thisRange[key+'min'], thisRange[key+'max'], row[item.key+key])})`)
									//-span(class="w3-left") MAX DATA HERE
									//- span(class="w3-left w3-tiny unimportant" style="margin-top:3px;")= row[item.key + 'MAX']
									span(class="w3-right")= row[item.key + key]
							else
								td(class=`${valStyle}`)= row[item.key + key]
else
	p.i!=msg('allianceselection.insufficientData')
script.
	//- Handler for the metric selection radio button
	$('input[name=metricSelection]').on('change', function() {
		var newKey = $(this).val();
		//- Using metricTable class to identify metric tables - using :not selector to hide all metric tables without the id of the one we want to show
		$(`.metricTable:not(#metricTable_${newKey})`).hide();
		$(`#metricTable_${newKey}`).show();
	})
	
	$('th').click(function(){
		var table = $(this).parents('table').eq(0)
		var rows = table.find('tr:gt(0)'/*one header row, 2022-3-17*/).toArray().sort(comparer($(this).index()));
		this.asc = !this.asc
		if (!this.asc){rows = rows.reverse()}
		for (var i = 0; i < rows.length; i++){table.append(rows[i])}
	})
	function comparer(index) {
		return function(a, b) {
			var valA = getCellValue(a, index), valB = getCellValue(b, index);
			if (valA === '') valA = 0; if (valB === '') valB = 0; // Treat empty as 0 for sorting the "V" column
			return $.isNumeric(valA) && $.isNumeric(valB) ? valA - valB : valA.toString().localeCompare(valB);
		}
	}
	function getCellValue(row, index){ return $(row).children('td').eq(index).text() }
style.
	th{
		cursor: pointer;
	}
	html{
		overflow: visible;
	}